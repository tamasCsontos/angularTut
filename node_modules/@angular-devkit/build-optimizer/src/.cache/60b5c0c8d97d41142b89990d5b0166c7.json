{"remainingRequest":"/home/csonti/Desktop/angular/project/optimizations-final/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/csonti/Desktop/angular/project/optimizations-final/node_modules/@firebase/database/dist/cjs/src/core/operation/ListenComplete.js","dependencies":[{"path":"/home/csonti/Desktop/angular/project/optimizations-final/node_modules/@firebase/database/dist/cjs/src/core/operation/ListenComplete.js","mtime":1521569547000},{"path":"/home/csonti/Desktop/angular/project/optimizations-final/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/csonti/Desktop/angular/project/optimizations-final/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Path_1 = require(\"../util/Path\");\nvar Operation_1 = require(\"./Operation\");\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @constructor\n * @implements {Operation}\n */\nvar ListenComplete = /** @class */ /*@__PURE__*/ (function () {\n    function ListenComplete(source, path) {\n        this.source = source;\n        this.path = path;\n        /** @inheritDoc */\n        this.type = Operation_1.OperationType.LISTEN_COMPLETE;\n    }\n    ListenComplete.prototype.operationForChild = function (childName) {\n        if (this.path.isEmpty()) {\n            return new ListenComplete(this.source, Path_1.Path.Empty);\n        }\n        else {\n            return new ListenComplete(this.source, this.path.popFront());\n        }\n    };\n    return ListenComplete;\n}());\nexports.ListenComplete = ListenComplete;\n",null]}